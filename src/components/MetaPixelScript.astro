---
export interface Props {
   pixelId: string;
}

const { pixelId } = Astro.props;
---

<script define:vars={{ pixelId }}>
   document.addEventListener('DOMContentLoaded', async () => {
      const { initMetaPixel, trackPageView } = await import('/src/utils/metaPixel.js');

      // Inicializar pixel con PageView automático
      initMetaPixel(pixelId);

      // Hacer disponible globalmente
      window.metaPixel = {
         track: async (eventName, customData, userData) => {
            const { trackEvent } = await import('/src/utils/metaPixel.js');
            return trackEvent(eventName, customData, userData);
         },
      };

      console.log('Meta Pixel initialized with deduplication');
   });

   // Detectar navegación SPA
   let lastUrl = location.href;
   new MutationObserver(async () => {
      const url = location.href;
      if (url !== lastUrl) {
         lastUrl = url;
         if (window.metaPixel) {
            const { trackPageView } = await import('/src/utils/metaPixel.js');
            await trackPageView();
         }
      }
   }).observe(document, { subtree: true, childList: true });
</script>
